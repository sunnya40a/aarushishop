<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>User Data</title>
    <!-- Include Vue.js from a CDN -->
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.js"></script>
    <!-- Include Axios for making HTTP requests -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <!-- Include Vue Modal Dialog library -->
    <script src="https://cdn.jsdelivr.net/npm/vue-modal-dialog@2.3.1/dist/vue-modal-dialog.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
</head>
<body>
<div id="vue-app" class="p-4">
    <h1 class="text-2xl font-semibold mb-4">User Data</h1>
    <div class="shadow overflow-hidden rounded border-b border-gray-200">
        <table class="min-w-full bg-white">
            <thead class="bg-gray-800 text-white">
                <tr>
                    <th class="py-3 px-4 font-semibold">UserID</th>
                    <th class="py-3 px-4 font-semibold">Username</th>
                    <th class="py-3 px-4 font-semibold">Email</th>
                    <th class="py-3 px-4 font-semibold">Password Hash</th>
                    <th class="py-3 px-4 font-semibold">Comment</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="user in users" :key="user.UserID" class="hover:bg-gray-100">
                    <td class="py-3 px-4" contenteditable="true" @focus="setFocus(user.UserID)">[[ user.UserID ]]</td>
                    <td class="py-3 px-4" contenteditable="true" @focus="setFocus(user.UserID)">[[ user.Username ]]</td>
                    <td class="py-3 px-4" contenteditable="true" @focus="setFocus(user.UserID)">[[ user.Email ]]</td>
                    <td class="py-3 px-4" contenteditable="true" @focus="setFocus(user.UserID)">[[ user.PasswordHash ]]</td>
                    <td class="py-3 px-4" contenteditable="true" @focus="setFocus(user.UserID)">[[ user.Comment ]]</td>
                </tr>
            </tbody>
        </table>
    </div>
    <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full mt-4" @click="addNewUser">Add New Record</button>
</div>


    <!-- Modal Dialog for Adding New User -->
    <div v-if="showModal" class="modal">
        <div class="modal-content">
            <h2>Add New User</h2>
            <label for="newUserID">UserID:</label>
            <input type="text" id="newUserID" v-model="newUser.UserID">
            <label for="newUsername">Username:</label>
            <input type="text" id="newUsername" v-model="newUser.Username">
            <label for="newEmail">Email:</label>
            <input type="text" id="newEmail" v-model="newUser.Email">
            <label for="newPassword">Password Hash:</label>
            <input type="text" id="newPassword" v-model="newUser.PasswordHash">
            <label for="newComment">Comment:</label>
            <input type="text" id="newComment" v-model="newUser.Comment">
            <button @click="saveNewUser">Save</button>
            <button @click="cancelNewUser">Cancel</button>
        </div>
    </div>

    <script>
        new Vue({
            el: '#vue-app',
            delimiters: ['[[', ']]'],
            data: {
                users: [],
                newUser: {
                    UserID: '',
                    Username: '',
                    Email: '',
                    PasswordHash: '',
                    Comment: '',
                },
                showModal: false
            },
            methods: {
                addNewUser() {
                    this.showModal = true;
                },
                saveNewUser() {
                    // Save the new user data
                    this.users.push({ ...this.newUser });
                    this.showModal = false;
                },
                cancelNewUser() {
                    this.showModal = false;
                },
                setFocus(userID) {
                    const element = document.querySelector(`[contenteditable][data-userid="${userID}"]`);
                    if (element) {
                        element.focus();
                    }
                }
            },
            mounted() {
                // Fetch existing user data here
                axios.get('/api/users')
                    .then(response => {
                        this.users = response.data.user;
                    })
                    .catch(error => {
                        console.error('Error fetching data:', error);
                    });
            }
        });
    </script>
</body>
</html>
